# templates/prometheus-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-prometheus
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.prometheus.replicas }}
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      securityContext:
        runAsNonRoot: {{ .Values.prometheus.securityContext.runAsNonRoot }}
        runAsUser: {{ .Values.prometheus.securityContext.runAsUser }}
        runAsGroup: {{ .Values.prometheus.securityContext.runAsGroup }}
        fsGroup: {{ .Values.prometheus.securityContext.fsGroup }}
      containers:
        - name: prometheus
          image: "{{ .Values.prometheus.image.repository }}:{{ .Values.prometheus.image.tag }}"
          imagePullPolicy: {{ .Values.prometheus.image.pullPolicy }}
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
          ports:
            - containerPort: {{ .Values.prometheus.ports.service }}
          securityContext:
            allowPrivilegeEscalation: {{ .Values.prometheus.securityContext.allowPrivilegeEscalation }}
            capabilities:
              drop: {{- toYaml .Values.prometheus.securityContext.capabilities.drop | nindent 16 }}
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/
            - name: prometheus-storage
              mountPath: /prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: {{ .Values.prometheus.config.configMapName }}
        - name: prometheus-storage
          persistentVolumeClaim:
            claimName: prometheus-pvc