# templates/kafka-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-kafka
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.kafka.replicas }}
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      securityContext:
        runAsNonRoot: {{ .Values.kafka.securityContext.runAsNonRoot }}
        runAsUser: {{ .Values.kafka.securityContext.runAsUser }}
        runAsGroup: {{ .Values.kafka.securityContext.runAsGroup }}
        fsGroup: {{ .Values.kafka.securityContext.fsGroup }}
      containers:
        - name: kafka
          image: "{{ .Values.kafka.image.repository }}:{{ .Values.kafka.image.tag }}"
          imagePullPolicy: {{ .Values.kafka.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: {{ .Values.kafka.securityContext.allowPrivilegeEscalation }}
            capabilities:
              drop: {{- toYaml .Values.kafka.securityContext.capabilities.drop | nindent 16 }}
            readOnlyRootFilesystem: {{ .Values.kafka.securityContext.readOnlyRootFilesystem }}
          ports:
            - containerPort: {{ .Values.kafka.ports.kafka }}
          volumeMounts:
            - name: kafka-storage
              mountPath: /var/lib/kafka/data
            - name: kafka-secrets
              mountPath: /etc/kafka/secrets
              readOnly: true
          envFrom:
            - configMapRef:
                name: {{ .Values.kafka.config.configMapName }}
          env:
            - name: KAFKA_PORT
              value: "9092"
            - name: KAFKA_SSL_KEYSTORE_LOCATION
              value: "/etc/kafka/secrets/kafka.server.keystore.jks"
            - name: KAFKA_SSL_KEYSTORE_PASSWORD
              value: "kafka123"
            - name: KAFKA_SSL_KEY_PASSWORD
              value: "kafka123"
            - name: KAFKA_SSL_TRUSTSTORE_LOCATION
              value: "/etc/kafka/secrets/kafka.server.truststore.jks"
            - name: KAFKA_SSL_TRUSTSTORE_PASSWORD
              value: "kafka123"
            - name: KAFKA_OPTS
              value: "-Djava.security.auth.login.config=/etc/kafka/secrets/kafka_server_jaas.conf"
      volumes:
        - name: kafka-storage
          persistentVolumeClaim:
            claimName: kafka-pvc
        - name: kafka-secrets
          secret:
            secretName: kafka-secrets