# templates/postgres-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      securityContext:
        runAsNonRoot: {{ .Values.postgres.securityContext.runAsNonRoot }}
        runAsUser: {{ .Values.postgres.securityContext.runAsUser }}
        runAsGroup: {{ .Values.postgres.securityContext.runAsGroup }}
        fsGroup: {{ .Values.postgres.securityContext.fsGroup }}
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.postgres.ports.service }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secrets.secretName }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secrets.secretName }}
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secrets.secretName }}
                  key: POSTGRES_DB
          securityContext:
            allowPrivilegeEscalation: {{ .Values.postgres.securityContext.allowPrivilegeEscalation }}
            capabilities:
              drop: {{- toYaml .Values.postgres.securityContext.capabilities.drop | nindent 16 }}
            readOnlyRootFilesystem: {{ .Values.postgres.securityContext.readOnlyRootFilesystem }}
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc