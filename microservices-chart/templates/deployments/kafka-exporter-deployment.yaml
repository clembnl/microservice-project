# templates/kafka-exporter-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-kafka-exporter
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-exporter
  template:
    metadata:
      labels:
        app: kafka-exporter
    spec:
      securityContext:
        runAsNonRoot: {{ .Values.kafkaExporter.securityContext.runAsNonRoot }}
        runAsUser: {{ .Values.kafkaExporter.securityContext.runAsUser }}
        runAsGroup: {{ .Values.kafkaExporter.securityContext.runAsGroup }}
        fsGroup: {{ .Values.kafkaExporter.securityContext.fsGroup }}
      containers:
        - name: kafka-exporter
          image: "{{ .Values.kafkaExporter.image.repository }}:{{ .Values.kafkaExporter.image.tag }}"
          imagePullPolicy: {{ .Values.kafkaExporter.image.pullPolicy }}
          args:
            - '--kafka.server={{ .Values.kafkaExporter.kafkaServer }}'
            - '--sasl.enabled'
            - '--sasl.username={{ .Values.kafkaExporter.sasl.username }}'
            - '--sasl.password={{ .Values.kafkaExporter.sasl.password }}'
            - '--sasl.mechanism={{ .Values.kafkaExporter.sasl.mechanism }}'
            - '--tls.enabled'
            - '--tls.ca-file={{ .Values.kafkaExporter.tls.caFile }}'
            - '--tls.cert-file={{ .Values.kafkaExporter.tls.certFile }}'
            - '--tls.key-file={{ .Values.kafkaExporter.tls.keyFile }}'
            - '--tls.insecure-skip-tls-verify'
            - '--topic.filter=^order-created$$'
            - '--log.level=info'
          ports:
            - containerPort: {{ .Values.kafkaExporter.ports.exporter }}
          volumeMounts:
            - name: kafka-exporter-secrets
              mountPath: /etc/kafka/secrets
              readOnly: true
          securityContext:
            allowPrivilegeEscalation: {{ .Values.kafkaExporter.securityContext.allowPrivilegeEscalation }}
            capabilities:
              drop: {{ toJson .Values.kafkaExporter.securityContext.capabilities.drop }}
            readOnlyRootFilesystem: {{ .Values.kafkaExporter.securityContext.readOnlyRootFilesystem }}
      volumes:
        - name: kafka-exporter-secrets
          secret:
            secretName: {{ .Values.kafkaExporter.volumes.kafkaExporterSecrets }}